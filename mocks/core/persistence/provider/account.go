// Code generated by MockGen. DO NOT EDIT.
// Source: account.go
//
// Generated by this command:
//
//	mockgen -source=account.go -destination=../../../mocks/core/persistence/provider/account.go -package=provider
//

// Package provider is a generated GoMock package.
package provider

import (
	context "context"
	reflect "reflect"
	domain "routines/core/domain"

	gomock "go.uber.org/mock/gomock"
)

// MockAccountProvider is a mock of AccountProvider interface.
type MockAccountProvider struct {
	ctrl     *gomock.Controller
	recorder *MockAccountProviderMockRecorder
	isgomock struct{}
}

// MockAccountProviderMockRecorder is the mock recorder for MockAccountProvider.
type MockAccountProviderMockRecorder struct {
	mock *MockAccountProvider
}

// NewMockAccountProvider creates a new mock instance.
func NewMockAccountProvider(ctrl *gomock.Controller) *MockAccountProvider {
	mock := &MockAccountProvider{ctrl: ctrl}
	mock.recorder = &MockAccountProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAccountProvider) EXPECT() *MockAccountProviderMockRecorder {
	return m.recorder
}

// GetAccountByDocumentNumber mocks base method.
func (m *MockAccountProvider) GetAccountByDocumentNumber(ctx context.Context, data any) (*domain.Account, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAccountByDocumentNumber", ctx, data)
	ret0, _ := ret[0].(*domain.Account)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAccountByDocumentNumber indicates an expected call of GetAccountByDocumentNumber.
func (mr *MockAccountProviderMockRecorder) GetAccountByDocumentNumber(ctx, data any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAccountByDocumentNumber", reflect.TypeOf((*MockAccountProvider)(nil).GetAccountByDocumentNumber), ctx, data)
}

// GetAccountById mocks base method.
func (m *MockAccountProvider) GetAccountById(ctx context.Context, data int) (*domain.Account, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAccountById", ctx, data)
	ret0, _ := ret[0].(*domain.Account)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAccountById indicates an expected call of GetAccountById.
func (mr *MockAccountProviderMockRecorder) GetAccountById(ctx, data any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAccountById", reflect.TypeOf((*MockAccountProvider)(nil).GetAccountById), ctx, data)
}
